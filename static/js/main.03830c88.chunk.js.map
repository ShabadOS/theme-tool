{"version":3,"sources":["lib/options.js","lib/utils.js","lib/contexts.js","components/Preview.js","components/SettingComponent.js","lib/generate.js","components/editors/ExportEditor.js","components/SettingsMenu.js","App.js","lib/mool-mantar.js","serviceWorker.js","index.js"],"names":["OPTION_TYPES","dropdown","Symbol","toggle","slider","popoverColorPicker","PREVIEW_OPTIONS","larivaarGurbani","name","type","storageKey","initial","larivaarAssist","englishTranslation","spanishTranslation","punjabiTranslation","englishTransliteration","hindiTransliteration","urduTransliteration","OVERLAY_OPTIONS","flexJustification","values","value","height","width","min","max","step","units","verticalPadding","horizontalPadding","backgroundColor","icon","faEyeDropper","WINDOW_OPTIONS","windowDisplay","windowVerticalPadding","windowHorizontalPadding","backgroundWindowColor","TEXT_OPTIONS","textAlign","textVerticalPadding","textHorizontalPadding","backgroundTextColor","primaryFontSize","primaryFontColor","primaryLarivaarAssistColor","primaryDropColor","secondaryFontSize","secondaryFontColor","secondaryLarivaarAssistColor","secondaryDropColor","vishraamHeavyColor","vishraamMediumColor","vishraamLightColor","OPTIONS","TABS","options","Object","keys","faEye","faSquare","faWindowRestore","faTextWidth","PAUSE_CHARS","heavy","medium","light","stripPauses","line","replace","RegExp","classifyWord","word","strip","entries","reduce","pauseType","pauseChar","slice","classifyWords","split","map","loadStorage","localStorage","length","forEach","window","setItem","loadCss","filter","includes","document","documentElement","style","setProperty","SettingsContext","createContext","Overlay","className","gurmukhi","useContext","settings","words","lastWords","pop","nextWords","partitionLine","lineIndex","key","i","classNames","translations","transliterations","larivaar","assist","translation","transliteration","defaultProps","Button","props","variant","typeComponents","onChange","Select","MenuProps","_event","MenuItem","Switch","checked","JSON","parse","event","target","valueLabelDisplay","newValue","useState","anchorEl","setAnchorEl","open","Boolean","id","undefined","onClick","currentTarget","size","color","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","rgb","r","g","b","a","generateFile","makeCssFile","dataFile","Blob","URL","revokeObjectURL","createObjectURL","ExportEditor","setSettings","handleClose","Box","p","link","createElement","setAttribute","href","body","appendChild","requestAnimationFrame","MouseEvent","dispatchEvent","removeChild","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","clear","EditorPanel","React","tabName","setTab","Tabs","orientation","indicatorColor","textColor","scrollButtons","Tab","label","faSave","optionName","Setting","SettingFactory","padding","Typography","App","settingsState","useReducer","updatedSettings","Provider","allowResize","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.03830c88.chunk.js","sourcesContent":["import {\n  faEye,\n  faSquare,\n  faTextWidth,\n  faWindowRestore,\n  faEyeDropper,\n} from '@fortawesome/free-solid-svg-icons'\n\nconst TEXT_ALIGN = [\n  { name: 'Middle', value: 'center' },\n  { name: 'Start', value: 'start' },\n  { name: 'Left', value: 'left' },\n  { name: 'Right', value: 'right' },\n]\n\nconst FLEX = [\n  { name: 'Space Between', value: 'space-between' },\n  { name: 'Space Around', value: 'space-around' },\n  { name: 'Space Evenly', value: 'space-evenly' },\n  { name: 'Top', value: 'flex-start' },\n  { name: 'Middle', value: 'center' },\n  { name: 'Bottom', value: 'flex-end' },\n]\n\n// Unique symbols for each option type\nexport const OPTION_TYPES = {\n  dropdown: Symbol( 'Dropdown' ),\n  toggle: Symbol( 'Toggle' ),\n  slider: Symbol( 'Slider' ),\n  popoverColorPicker: Symbol( 'Popover Color Picker' ),\n}\n\n/**\n * Dropdown Type schema\n * { name: string\n *   type: symbol\n *   values: array with objects\n *   storageKey: string\n *   intial: string\n * }\n *\n * Slider Type schema\n * { name: string\n *   type: symbol\n *   min: int\n *   max: int\n *   step: int\n *   units: string\n *   storageKey: string\n *   initial: int\n * }\n *\n * Color Type schema\n * { name: string\n *   type: symbol\n *   icon: fortawesome icon\n *   storageKey: string\n *   inital: string\n * }\n *\n * Toggle Type schema\n * { name: string\n *   type: symbol\n *   storageKey: string\n *   intial: bool\n *\n * }\n *\n */\n\nconst PREVIEW_OPTIONS = {\n  larivaarGurbani: { name: 'Larivaar Gurbani', type: OPTION_TYPES.toggle, storageKey: 'larivaarGurbani', initial: false },\n  larivaarAssist: { name: 'Larivaar Assist', type: OPTION_TYPES.toggle, storageKey: 'larivaarAssist', initial: false },\n  englishTranslation: { name: 'English Translation', type: OPTION_TYPES.toggle, storageKey: 'englishTranslation', initial: false },\n  spanishTranslation: { name: ' Spanish Translation', type: OPTION_TYPES.toggle, storageKey: 'spanishTranslation', initial: false },\n  punjabiTranslation: { name: 'Punjabi Translation', type: OPTION_TYPES.toggle, storageKey: 'punjabiTranslation', initial: false },\n  englishTransliteration: { name: 'English Transliteration', type: OPTION_TYPES.toggle, storageKey: 'englishTransliteration', initial: false },\n  hindiTransliteration: { name: 'Hindi Transliteration', type: OPTION_TYPES.toggle, storageKey: 'hindiTransliteration', initial: false },\n  urduTransliteration: { name: 'Urdu Transliteration', type: OPTION_TYPES.toggle, storageKey: 'urduTransliteration', initial: false },\n}\n\nconst OVERLAY_OPTIONS = {\n  flexJustification: { name: 'Justification', type: OPTION_TYPES.dropdown, values: FLEX, storageKey: '--overlay-flex-justification', initial: 'flex-start' },\n  height: { name: 'Height', type: OPTION_TYPES.dropdown, values: [ { name: 'Auto', value: 'auto' }, { name: '100', value: '100vh' } ], storageKey: '--overlay-height', initial: 'auto' },\n  width: { name: 'Width', type: OPTION_TYPES.slider, min: 10, max: 100, step: 1, storageKey: '--overlay-width', initial: 'inherit', units: 'vw' },\n  verticalPadding: { name: 'Vertical Padding', type: OPTION_TYPES.slider, min: 1, max: 10, step: 1, storageKey: '--overlay-vertical-padding', units: 'vh', initial: '2vh' },\n  horizontalPadding: { name: 'Horizontal Padding', type: OPTION_TYPES.slider, min: 0, max: 10, step: 1, storageKey: '--overlay-horizontal-padding', units: 'vw', initial: 'var(--overlay-vertical-padding)' },\n  backgroundColor: { name: 'Background Color ', type: OPTION_TYPES.popoverColorPicker, icon: faEyeDropper, storageKey: '--overlay-background-color', initial: '#000' },\n  // Need to implement theme-tool #8\n  // backgroundSize: { name: 'Background Size', type: OPTION_TYPES.dropdown, values: [ { name: 'Cover', value: 'cover' }, { name: 'None', value: 'none' }, { name: 'Contain', value: 'contain' } ], storageKey: '--overlay-background-size', initial: 'cover' },\n}\n\nconst WINDOW_OPTIONS = {\n  windowDisplay: { name: 'Display', type: OPTION_TYPES.dropdown, values: [ { name: 'Flex', value: 'flex' }, { name: 'Inline Block', value: 'inline-block' } ], storageKey: '--overlay-window-display', initial: 'flex' },\n  windowVerticalPadding: { name: 'Vertical Padding', type: OPTION_TYPES.slider, min: 0, max: 10, step: 0.1, storageKey: '--overlay-window-vertical-padding', units: 'vh', initial: '0' },\n  windowHorizontalPadding: { name: 'Horizontal Padding', type: OPTION_TYPES.slider, min: 0, max: 10, step: 0.1, storageKey: '--overlay-window-horizontal-padding', units: 'vw', initial: 'var(--overlay-window-vertical-padding)' },\n  backgroundWindowColor: { name: 'Background Color ', type: OPTION_TYPES.popoverColorPicker, icon: faEyeDropper, storageKey: '--overlay-window-background-color', initial: 'none' },\n  // Need to implement theme-tool #8\n  // backgroundWindowSize: { name: 'Background Size', type: OPTION_TYPES.dropdown, values: [ { name: 'Cover', value: 'cover' }, { name: 'None', value: 'none' }, { name: 'Contain', value: 'contain' } ], storageKey: '--overlay-window-background-size', initial: 'cover' },\n}\n\nconst TEXT_OPTIONS = {\n  textAlign: { name: 'Alignment', type: OPTION_TYPES.dropdown, values: TEXT_ALIGN, storageKey: '--overlay-text-align', initial: 'center' },\n  textVerticalPadding: { name: 'Vertical Padding', type: OPTION_TYPES.slider, min: 0, max: 10, step: 0.1, storageKey: '--overlay-text-vertical-padding', units: 'vh', initial: '0' },\n  textHorizontalPadding: { name: 'Horizontal Padding', type: OPTION_TYPES.slider, min: 0, max: 10, step: 0.1, storageKey: '--overlay-text-horizontal-padding', units: 'vw', initial: 'var(--overlay-text-vertical-padding)' },\n  backgroundTextColor: { name: 'Background Color ', type: OPTION_TYPES.popoverColorPicker, icon: faEyeDropper, storageKey: '--overlay-text-background-color', initial: 'none' },\n  // Need to implement theme-tool #8\n  // backgroundTextSize: { name: 'Background Size', type: OPTION_TYPES.dropdown, values: [ { name: 'Cover', value: 'cover' }, { name: 'None', value: 'none' }, { name: 'Contain', value: 'contain' } ], storageKey: '--overlay-text-background-size', initial: 'contain' },\n\n  // Font\n  primaryFontSize: { name: 'Primary Font Size', type: OPTION_TYPES.slider, min: 0, max: 10, step: 0.1, storageKey: '--overlay-primary-font-size', units: 'vh', initial: '4.8vh' },\n  primaryFontColor: { name: 'Primary Font Color', type: OPTION_TYPES.popoverColorPicker, icon: faEyeDropper, storageKey: '--overlay-primary-font-color', initial: '#ffd22b' },\n  primaryLarivaarAssistColor: { name: 'Primary Larivaar Assist Color', type: OPTION_TYPES.popoverColorPicker, icon: faEyeDropper, storageKey: '--overlay-primary-larivaar-assist-color', initial: '#812929' },\n  primaryDropColor: { name: 'Primary Drop Color', type: OPTION_TYPES.popoverColorPicker, icon: faEyeDropper, storageKey: '--overlay-primary-drop-color', initial: 'none' },\n  secondaryFontSize: { name: 'Secondary Font Size', type: OPTION_TYPES.slider, min: 0, max: 10, step: 0.1, storageKey: '--overlay-secondary-font-size', units: 'vh', initial: 'calc( var(--overlay-primary-font-size) * 0.6 )' },\n  secondaryFontColor: { name: 'Secondary Font Color', type: OPTION_TYPES.popoverColorPicker, icon: faEyeDropper, storageKey: '--overlay-secondary-font-color', initial: '#FFFFFF' },\n  secondaryLarivaarAssistColor: { name: 'Secondary Larivaar Assist Color', type: OPTION_TYPES.popoverColorPicker, icon: faEyeDropper, storageKey: '--overlay-secondary-larivaar-assist-color', initial: '#eaffff' },\n  secondaryDropColor: { name: 'Secondary Drop Color', type: OPTION_TYPES.popoverColorPicker, icon: faEyeDropper, storageKey: '--overlay-secondary-drop-color', initial: 'none' },\n\n  // Vishraam\n  vishraamHeavyColor: { name: 'Heavy Vishraam Color', type: OPTION_TYPES.popoverColorPicker, icon: faEyeDropper, storageKey: '--overlay-vishraam-heavy-color', initial: 'inherit' },\n  vishraamMediumColor: { name: 'Medium Vishraam Color', type: OPTION_TYPES.popoverColorPicker, icon: faEyeDropper, storageKey: '--overlay-vishraam-medium-color', initial: 'inherit' },\n  vishraamLightColor: { name: 'Light Vishraam Color', type: OPTION_TYPES.popoverColorPicker, icon: faEyeDropper, storageKey: '--overlay-vishraam-light-color', initial: 'inherit' },\n\n}\n\n\nexport const OPTIONS = {\n  ...PREVIEW_OPTIONS,\n  ...OVERLAY_OPTIONS,\n  ...WINDOW_OPTIONS,\n  ...TEXT_OPTIONS,\n}\n\nexport const TABS = [\n  {\n    name: 'Preview',\n    options: Object.keys( PREVIEW_OPTIONS ),\n    icon: faEye,\n  },\n  {\n    name: 'Overlay',\n    options: Object.keys( OVERLAY_OPTIONS ),\n    icon: faSquare,\n  },\n  {\n    name: 'Window',\n    options: Object.keys( WINDOW_OPTIONS ),\n    icon: faWindowRestore,\n  },\n  {\n    name: 'Text',\n    options: Object.keys( TEXT_OPTIONS ),\n    icon: faTextWidth,\n  },\n]\n","/**\n * https://github.com/ShabadOS/desktop/blob/dev/app/frontend/src/lib/utils.js\n */\n\nimport { OPTIONS } from './options'\n\n// Detect vishraams/pauses with characters\nexport const PAUSE_CHARS = {\n  heavy: ';',\n  medium: ',',\n  light: '.',\n}\n\n/**\n * Removes the pause characters from the string.\n * @param line The line to remove the pause characters from.\n */\nexport const stripPauses = line => line.replace( new RegExp( `[${Object.values( PAUSE_CHARS )}]`, 'g' ), '' )\n\n/**\n * Classifies the pause for a single word, returning an object of the word and type.\n * @param word The word to classify.\n * @param strip Whether or not to strip the vishraam character.\n */\nexport const classifyWord = ( word, strip = true ) => ( {\n  word: strip ? stripPauses( word ) : word,\n  type: Object\n    .entries( { ...PAUSE_CHARS } )\n    .reduce( ( type, [ pauseType, pauseChar ] ) => (\n      // Check if last char in word is the current pause char, and return that type if so\n      word.slice( -1 ) === pauseChar ? pauseType : type ), null ),\n} )\n\n/**\n * Returns an array of objects with their text and pause type.\n * @param line The line to process.\n * @param strip Whether or not to strip vishraam characters.\n */\nexport const classifyWords = ( line, strip = true ) => line.split( ' ' ).map( word => classifyWord( word, strip ) )\n\n/**\n * Partitions the line by heavy pause into arrays.\n * @param line The line to partition.\n * @param strip Whether or not to strip vishraam chars from the word.\n */\nexport const partitionLine = ( line, strip = true ) => classifyWords( line, strip )\n  .reduce( ( words, { type, word } ) => {\n  // Get last list of words, removing it from the words list\n    const lastWords = words.pop()\n\n    // Add the words to the last list of words\n    const nextWords = [ ...words, [ ...lastWords, { type, word } ] ]\n\n    // If it's a heavy pause, start a new array after it for the next words\n    return type === 'heavy' ? [ ...nextWords, [] ] : nextWords\n  }, [ [] ] )\n\n// Write template Stylesheet to localstorage\nexport const loadStorage = () => {\n  if ( localStorage.length < Object.keys( OPTIONS ).length ) {\n    Object.values( OPTIONS )\n      .forEach( ( { storageKey, initial } ) => (\n        window.localStorage.setItem( storageKey, initial )\n      ) )\n  }\n}\n\n// Load stylesheet from local storage\nexport const loadCss = () => {\n  Object.values( OPTIONS )\n    .filter( ( { storageKey } ) => storageKey.includes( '--' ) )\n    .forEach( ( { storageKey } ) => (\n      document.documentElement.style.setProperty( storageKey, localStorage[storageKey] )\n    ) )\n}\n","import { createContext } from 'react'\n\nexport const SettingsContext = createContext()\n","import React, { useContext } from 'react'\nimport classNames from 'classnames'\nimport { string, bool, oneOfType } from 'prop-types'\n\nimport { partitionLine, classifyWords } from '../lib/utils'\nimport { SettingsContext } from '../lib/contexts'\n\nimport './Preview.css'\n\n/**\n * Overlay Line Component.\n * Renders the various aspects of a single line.\n * @param {string} className An optional class name to append.\n * @param {string} gurmukhi The Gurmukhi of the line to render.\n * @param {string} punjabiTranslation The Punjabi translation of the line to render.\n * @param {string} englishTranslation The English translation of the line to render.\n * @param {string} transliteration The English transliteration of the line to render.\n */\nconst Overlay = ( {\n  className,\n  gurmukhi,\n  punjabiTranslation,\n  englishTranslation,\n  spanishTranslation,\n  englishTransliteration,\n  hindiTransliteration,\n  urduTransliteration,\n} ) => {\n  const [ settings ] = useContext( SettingsContext )\n  const line = partitionLine( gurmukhi )\n    .map( ( line, lineIndex ) => (\n      <span key={lineIndex}>\n        {line.map( ( { word, type }, i ) => <span key={`${word}-${type}-${i}`} className={classNames( type, 'word' )}>{word}</span> )}\n      </span>\n    ) )\n\n  const translations = [\n    [ 'english', englishTranslation, settings.englishTranslation ],\n    [ 'punjabi', punjabiTranslation, settings.punjabiTranslation ],\n    [ 'spanish', spanishTranslation, settings.spanishTranslation ],\n  ].filter( ( [ , , enabled ] ) => enabled )\n\n  const transliterations = [\n    [ 'english', englishTransliteration, settings.englishTransliteration ],\n    [ 'hindi', hindiTransliteration, settings.hindiTransliteration ],\n    [ 'urdu', urduTransliteration, settings.urduTransliteration ],\n  ].filter( ( [ , , enabled ] ) => enabled )\n\n  return (\n\n    <div className={classNames( className, {\n      larivaar: settings.larivaarGurbani,\n      assist: settings.larivaarGurbani && settings.larivaarAssist,\n    }, 'overlay-line' )}\n    >\n\n      <p className=\"gurmukhi\">\n\n        <span className=\"text\">\n          {line}\n        </span>\n\n      </p>\n\n      {translations.map( ( [ name, translation ] ) => (\n        <p key={`${name}-${translation}`} className={classNames( name, 'translation' )}>\n\n          <span className=\"text\">\n            {translation}\n          </span>\n\n        </p>\n      ) )}\n\n      {transliterations.map( ( [ name, transliteration ] ) => (\n        <p key={`${name}-${transliteration}`} className={classNames( name, 'transliteration' )}>\n\n          <span className=\"text\">\n            {classifyWords( transliteration, true ).map(\n              ( { word, type }, i ) => <span key={`${word}-${type}-${i}`} className={classNames( type, 'word' )}>{word}</span>,\n            )}\n          </span>\n\n        </p>\n      ) )}\n\n    </div>\n\n  )\n}\n\nOverlay.propTypes = {\n  className: string,\n  gurmukhi: string.isRequired,\n  punjabiTranslation: oneOfType( [ string, bool ] ),\n  englishTranslation: oneOfType( [ string, bool ] ),\n  spanishTranslation: oneOfType( [ string, bool ] ),\n  englishTransliteration: oneOfType( [ string, bool ] ),\n  hindiTransliteration: oneOfType( [ string, bool ] ),\n  urduTransliteration: oneOfType( [ string, bool ] ),\n}\n\nOverlay.defaultProps = {\n  className: null,\n  englishTranslation: false,\n  spanishTranslation: false,\n  punjabiTranslation: false,\n  englishTransliteration: false,\n  hindiTransliteration: false,\n  urduTransliteration: false,\n}\n\nexport default Overlay\n","import React, { useState } from 'react'\nimport classNames from 'classnames'\nimport {\n  any,\n  func,\n  bool,\n  string,\n  arrayOf,\n  oneOfType,\n} from 'prop-types'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport {\n  Select,\n  Switch,\n  Popover,\n  MenuItem,\n  Slider as MaterialSlider,\n  Button as MaterialButton,\n} from '@material-ui/core'\n\nimport { SketchPicker } from 'react-color'\n\nimport { OPTION_TYPES } from '../lib/options'\n\nexport const Toggle = ( { value, onChange, ...props } ) => (\n  <Switch\n    className={classNames( 'toggle', { checked: JSON.parse( value ) } )}\n    checked={JSON.parse( value )}\n    onChange={event => onChange( event.target.checked )}\n    {...props}\n  />\n)\n\nToggle.propTypes = {\n  value: oneOfType( [ string, bool ] ).isRequired,\n  onChange: func.isRequired,\n}\n\nexport const Slider = ( { value, storageKey, units, onChange, ...props } ) => (\n  <MaterialSlider\n    className=\"slider\"\n    valueLabelDisplay=\"auto\"\n    value={value.split( units )[0]}\n    onChange={( _event, newValue ) => onChange( `${newValue}${units}` )}\n    {...props}\n  />\n)\n\nSlider.propTypes = {\n  value: string.isRequired,\n  units: string.isRequired,\n  storageKey: string.isRequired,\n  onChange: func.isRequired,\n}\n\nexport const Dropdown = ( { name, storageKey, value, values, onChange, ...props } ) => (\n  <Select\n    className=\"select\"\n    MenuProps={{ className: 'select-menu' }}\n    value={value}\n    onChange={( _event, { key } ) => { onChange( key ) }}\n    {...props}\n  >\n\n    {values.map(\n      ( { name, value } ) => <MenuItem key={value} value={value}>{name || value}</MenuItem>,\n    )}\n\n  </Select>\n)\n\nDropdown.propTypes = {\n  name: string.isRequired,\n  storageKey: string.isRequired,\n  values: arrayOf( any ).isRequired,\n  onChange: func.isRequired,\n  value: string.isRequired,\n}\n\nexport const Button = ( { className, ...props } ) => (\n  <MaterialButton\n    variant=\"contained\"\n    className={classNames( className, 'button' )}\n    {...props}\n  />\n)\n\nButton.propTypes = {\n  className: string,\n}\n\nButton.defaultProps = {\n  className: null,\n}\n\nexport const PopoverColorPicker = ( { name, value, icon, storageKey, onChange, ...props } ) => {\n  const [ anchorEl, setAnchorEl ] = useState( null )\n  const open = Boolean( anchorEl )\n  const id = open ? 'simple-popover' : undefined\n\n  const handleClick = event => {\n    setAnchorEl( event.currentTarget )\n  }\n\n  const handleClose = () => {\n    setAnchorEl( null )\n  }\n\n  return (\n    <div>\n\n      <FontAwesomeIcon\n        icon={icon}\n        onClick={handleClick}\n        size=\"lg\"\n        color={value}\n      />\n\n      <Popover\n        id={id}\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'right',\n        }}\n        transformOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n      >\n\n        <SketchPicker\n          className=\"colorPicker\"\n          color={value}\n          onChange={( { rgb } ) => { onChange( `rgba(${rgb.r},${rgb.g},${rgb.b},${rgb.a})` ) }}\n          {...props}\n        />\n\n      </Popover>\n\n    </div>\n  )\n}\n\nPopoverColorPicker.propTypes = {\n  value: string.isRequired,\n  icon: any.isRequired,\n  name: string.isRequired,\n  storageKey: string.isRequired,\n  onChange: func.isRequired,\n}\n\nconst typeComponents = {\n  [OPTION_TYPES.dropdown]: Dropdown,\n  [OPTION_TYPES.toggle]: Toggle,\n  [OPTION_TYPES.slider]: Slider,\n  [OPTION_TYPES.popoverColorPicker]: PopoverColorPicker,\n}\n\nexport default type => typeComponents[type]\n","import { OPTIONS } from './options'\n\nlet generateFile = null\n\n/**\n * Reads the values from local storage\n * Appends css attribute\n * @returns array: data that can be converted to css file.\n */\nconst getData = () => [\n  ':root{\\n',\n  '/* Generated using ShabadOS Theme Generator */\\n',\n  ...Object.values( OPTIONS )\n    .filter( ( { storageKey } ) => storageKey.includes( '--' ) )\n    .filter( ( { storageKey } ) => localStorage[storageKey] !== 'none' )\n    .filter( ( { storageKey } ) => localStorage[storageKey] !== 'inherit' )\n    .map( ( { storageKey } ) => ( `${storageKey}: ${localStorage[storageKey]};\\n` ) ),\n  '}',\n]\n\n/**\n * Converts the data[] into a blob for storage\n * @returns blob URL\n */\nconst makeCssFile = () => {\n  const dataFile = new Blob( getData(), { type: 'text/plain' } )\n  if ( generateFile !== null ) {\n    window.URL.revokeObjectURL( generateFile )\n  }\n  generateFile = window.URL.createObjectURL( dataFile )\n  return generateFile\n}\n\n\nexport default makeCssFile\n","import React, { useState } from 'react'\nimport {\n  Box,\n  Dialog,\n  DialogTitle,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n} from '@material-ui/core'\n\nimport makeCssFile from '../../lib/generate'\nimport { loadStorage, loadCss } from '../../lib/utils'\n\nimport { Button } from '../SettingComponent'\n\nconst ExportEditor = () => {\n  const [ settings, setSettings ] = useState( false )\n\n  const saveFile = () => {\n    const link = document.createElement( 'a' )\n    link.setAttribute( 'download', 'customTheme.css' )\n    link.href = makeCssFile()\n    document.body.appendChild( link )\n    window.requestAnimationFrame( () => {\n      const event = new MouseEvent( 'click' )\n      link.dispatchEvent( event )\n      document.body.removeChild( link )\n    } )\n  }\n\n  const handleClickOpen = () => { setSettings( true ) }\n\n  const handleClose = () => { setSettings( false ) }\n\n  const resetEditor = () => {\n    window.localStorage.clear()\n    loadStorage()\n    loadCss()\n    setSettings( false )\n  }\n\n  return (\n    <Box p={2}>\n      <Button onClick={saveFile}>\n        Save\n      </Button>\n\n      <div>\n\n        <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n          Reset to defaults\n        </Button>\n\n        <Dialog\n          open={settings}\n          onClose={handleClose}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n\n\n          <DialogTitle id=\"alert-dialog-title\">\n            Are you sure you want to reset the theme editor?\n          </DialogTitle>\n\n\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              You cannot undo this action.\n            </DialogContentText>\n          </DialogContent>\n\n\n          <DialogActions>\n\n            <Button onClick={resetEditor} color=\"secondary\">\n              Reset\n            </Button>\n\n            <Button onClick={handleClose} color=\"primary\">\n              Cancel\n            </Button>\n\n          </DialogActions>\n\n        </Dialog>\n      </div>\n    </Box>\n  )\n}\n\nexport default ExportEditor\n","import React, { useContext } from 'react'\nimport {\n  Box,\n  Tab,\n  Tabs,\n  Typography,\n} from '@material-ui/core'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSave } from '@fortawesome/free-solid-svg-icons'\n\nimport { TABS, OPTIONS } from '../lib/options'\nimport { SettingsContext } from '../lib/contexts'\n\nimport SettingFactory from './SettingComponent'\n\nimport ExportEditor from './editors/ExportEditor'\n\nimport './SettingsMenu.css'\n\nconst EditorPanel = () => {\n  const [ settings, setSettings ] = useContext( SettingsContext )\n  const [ tabName, setTab ] = React.useState( TABS[0].name )\n\n  const handleChange = ( _event, value ) => setTab( value )\n\n  return (\n    <div className=\"settings-menu\">\n      <Tabs\n        orientation=\"vertical\"\n        value={tabName}\n        onChange={handleChange}\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n        variant=\"scrollable\"\n        scrollButtons=\"auto\"\n        className=\"tabs\"\n      >\n        {TABS.map( ( { name, icon } ) => <Tab label={name} icon={<FontAwesomeIcon icon={icon} size=\"2x\" />} value={name} /> )}\n\n        <Tab label=\"Export\" icon={<FontAwesomeIcon icon={faSave} size=\"2x\" />} value=\"Export\" />\n\n      </Tabs>\n\n      {tabName === 'Export' && <ExportEditor />}\n\n      {TABS\n        .filter( ( { name } ) => name === tabName )\n        .map( ( { options } ) => (\n\n          <Box className=\"pane\" p={2}>\n\n            {options.map( optionName => {\n              // Grab the actual option\n              const { name, type, storageKey, ...props } = OPTIONS[optionName]\n\n              // Get the component for the given type\n              const Setting = SettingFactory( type )\n\n              // onChange for any setting\n              const onChange = value => setSettings( { [optionName]: value } )\n\n              return (\n                <Box className=\"option\" padding=\"0.3em 0\">\n\n                  <Typography className=\"option-label\">{name}</Typography>\n\n                  <Setting\n                    className=\"option-worker\"\n                    name={optionName}\n                    value={settings[optionName] || localStorage[storageKey]}\n                    onChange={onChange}\n                    {...props}\n                  />\n\n                </Box>\n              )\n            } )}\n\n          </Box>\n        ) )}\n\n    </div>\n  )\n}\n\nexport default EditorPanel\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useReducer } from 'react'\nimport SplitPane from 'react-split-pane'\n\nimport Overlay from './components/Preview'\nimport EditorPanel from './components/SettingsMenu'\n\nimport { SettingsContext } from './lib/contexts'\nimport { loadCss, loadStorage } from './lib/utils'\nimport { OPTIONS } from './lib/options'\n\nimport './App.css'\n\nimport {\n  GURMUKHI,\n  TRANSLITERATION_ENGLISH,\n  TRANSLITERATION_DEVNAGRI,\n  TRANSLITERATION_URDU,\n  TRANSLATION_ENGLISH,\n  TRANSLATION_PUNJABI,\n  TRANSLATION_SPANSISH,\n} from './lib/mool-mantar'\n\n//! Refactor, must load first\nloadStorage()\nloadCss()\n\nconst App = () => {\n  const settingsState = useReducer( ( settings, updatedSettings = {} ) => {\n    Object.entries( updatedSettings ).forEach( ( [ name, value ] ) => {\n      const { storageKey } = OPTIONS[name]\n\n      if ( storageKey.includes( '--' ) ) document.documentElement.style.setProperty( storageKey, value )\n      window.localStorage.setItem( storageKey, value )\n    } )\n\n    return { ...settings, ...updatedSettings }\n  }, {} )\n\n  return (\n    <SettingsContext.Provider value={settingsState}>\n\n\n      <div className=\"app\">\n        <SplitPane split=\"vertical\" size={350} allowResize={false}>\n          <div className=\"editior\">\n            <EditorPanel />\n          </div>\n          <div className=\"overlay\">\n            <Overlay\n              {...( {\n                gurmukhi: GURMUKHI,\n                larivaarGurbani: true,\n                larivaarAssist: true,\n                englishTranslation: TRANSLATION_ENGLISH,\n                punjabiTranslation: TRANSLATION_PUNJABI,\n                spanishTranslation: TRANSLATION_SPANSISH,\n                englishTransliteration: TRANSLITERATION_ENGLISH,\n                hindiTransliteration: TRANSLITERATION_DEVNAGRI,\n                urduTransliteration: TRANSLITERATION_URDU,\n              } )}\n            />\n          </div>\n        </SplitPane>\n      </div>\n\n    </SettingsContext.Provider>\n  )\n}\n\n\nexport default App\n","export const GURMUKHI = '<> siq nwmu krqw purKu inrBau inrvYru Akwl mUriq AjUnI sYBM gur pRswid ]'\nexport const TRANSLITERATION_ENGLISH = 'ik oankaar sat naam karataa purakh nirbhau niravair akaal moorat ajoonee saibhan gur prasaad |'\nexport const TRANSLITERATION_DEVNAGRI = ' ੴ सति नामु करता पुरखु निरभउ निरवैरु अकाल मूरति अजूनी सैभं गुर प्रसादि ॥'\nexport const TRANSLITERATION_URDU = 'اک اونکار ست نام کرتا پُرکھ نِربھاُ نِروَےر اکال مُورت اجُونی سَےبھں گُر پرساد ۔۔'\nexport const TRANSLATION_PUNJABI = 'ਅਕਾਲ ਪੁਰਖ ਇੱਕ ਹੈ, ਜਿਸ ਦਾ ਨਾਮ \\'ਹੋਂਦ ਵਾਲਾ\\' ਹੈ ਜੋ ਸ੍ਰਿਸ਼ਟੀ ਦਾ ਰਚਨਹਾਰ ਹੈ, ਜੋ ਸਭ ਵਿਚ ਵਿਆਪਕ ਹੈ, ਭੈ ਤੋਂ ਰਹਿਤ ਹੈ, ਵੈਰ-ਰਹਿਤ ਹੈ, ਜਿਸ ਦਾ ਸਰੂਪ ਕਾਲ ਤੋਂ ਪਰੇ ਹੈ, (ਭਾਵ, ਜਿਸ ਦਾ ਸਰੀਰ ਨਾਸ-ਰਹਿਤ ਹੈ), ਜੋ ਜੂਨਾਂ ਵਿਚ ਨਹੀਂ ਆਉਂਦਾ, ਜਿਸ ਦਾ ਪ੍ਰਕਾਸ਼ ਆਪਣੇ ਆਪ ਤੋਂ ਹੋਇਆ ਹੈ ਅਤੇ ਜੋ ਸਤਿਗੁਰੂ ਦੀ ਕਿਰਪਾ ਨਾਲ ਮਿਲਦਾ ਹੈ।'\nexport const TRANSLATION_ENGLISH = ' One Universal Creator God. The Name Is Truth. Creative Being Personified. No Fear. No Hatred. Image Of The Undying, Beyond Birth, Self-Existent. By Guru\\'s Grace ~ '\nexport const TRANSLATION_SPANSISH = 'Un sólo Creador Universal, Verdad es Su Nombre. Creativa Su Personalidad. Sin Miedo, sin Venganza. Inmortal, Sin Principio, Sin Fin, Auto Existente. Por la Gracia del Verdadero Guru.'\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById( 'root' ),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}