{"version":3,"sources":["lib/generate.js","components/editors/ExportEditor.js"],"names":["generateFile","makeCssFile","dataFile","Blob","Object","values","OPTIONS","filter","storageKey","includes","localStorage","map","DROP_COLORS","rgba","getColorObject","r","g","b","type","window","URL","revokeObjectURL","createObjectURL","ExportEditor","useState","settings","setSettings","timestamp","themeName","setThemeName","handleClose","Box","className","p","TextField","label","defaultValue","onFocus","target","select","onChange","value","trim","fullWidth","color","onClick","link","document","createElement","href","setAttribute","click","Dialog","open","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","clear","location","reload"],"mappings":"oPAGIA,EAAe,KAsCJC,EATK,WAClB,IAAMC,EAAW,IAAIC,KAvBP,CACd,WACA,oDAFc,mBAGXC,OAAOC,OAAQC,KACfC,QAAQ,qBAAIC,WAA6BC,SAAU,SACnDF,QAAQ,gBAAIC,EAAJ,EAAIA,WAAJ,MAAmD,SAA7BE,aAAaF,MAC3CD,QAAQ,gBAAIC,EAAJ,EAAIA,WAAJ,MAAmD,YAA7BE,aAAaF,MAC3CG,KAAK,YAAuB,IAAnBH,EAAkB,EAAlBA,WAER,GAAKI,IAAYH,SAAUD,GAAe,CACxC,IAAMK,EAAOC,YAAgBJ,aAAaF,IAC1C,MAAM,GAAN,OAAUA,EAAV,aAAyBK,EAAKE,EAA9B,aAAoCF,EAAKG,EAAzC,aAA+CH,EAAKI,EAApD,OAEF,MAAM,GAAN,OAAUT,EAAV,aAAyBE,aAAaF,GAAtC,WAbU,CAed,MAQsC,CAAEU,KAAM,eAK9C,OAJsB,OAAjBlB,GACHmB,OAAOC,IAAIC,gBAAiBrB,GAE9BA,EAAemB,OAAOC,IAAIE,gBAAiBpB,I,SCqE9BqB,UA1FM,WAAO,IAAD,EACSC,oBAAU,GADnB,mBACjBC,EADiB,KACPC,EADO,OAEWF,mBAAS,WAAD,OAAaG,gBAFhC,mBAEjBC,EAFiB,KAENC,EAFM,KAanBC,EAAc,WAAQJ,GAAa,IAQzC,OACE,kBAACK,EAAA,EAAD,CAAKC,UAAU,OAAOC,EAAG,GAEvB,yBAAKD,UAAU,UAEb,kBAACE,EAAA,EAAD,CACEF,UAAU,aACVG,MAAM,aACNC,aAAcR,EACdS,QAAS,qBAAIC,OAAqBC,UAClCC,SAAU,YAA8B,IAAhBC,EAAe,EAAzBH,OAAUG,MAGA,KAAjBA,EAAMC,OAAgBb,EAAa,WAAD,OAAaF,gBAC/CE,EAAcY,IAErBE,WAAS,KAKb,yBAAKX,UAAU,UACb,kBAAC,IAAD,CAAQY,MAAM,UAAUC,QAvCb,WACf,IAAMC,EAAOC,SAASC,cAAe,KACrCF,EAAKG,KAAOhD,IACZ6C,EAAKI,aAAc,WAAnB,UAAkCtB,EAAlC,SACAkB,EAAKK,UAmCD,SAKF,yBAAKnB,UAAU,UAEb,kBAAC,IAAD,CAAQY,MAAM,UAAUC,QAvCN,WAAQnB,GAAa,KAuCvC,qBAIA,kBAAC0B,EAAA,EAAD,CACEC,KAAM5B,EACN6B,QAASxB,EACTyB,kBAAgB,qBAChBC,mBAAiB,4BAGjB,kBAACC,EAAA,EAAD,CAAaC,GAAG,sBAAhB,oDAIA,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAmBF,GAAG,4BAAtB,iCAKF,kBAACG,EAAA,EAAD,KAEE,kBAAC,IAAD,CAAQhB,QA1DE,WAClB1B,OAAOT,aAAaoD,QACpBpC,GAAa,GACbP,OAAO4C,SAASC,UAuDsBpB,MAAM,WAApC,SAIA,kBAAC,IAAD,CAAQC,QAASf,EAAac,MAAM,WAApC","file":"static/js/8.b28ad2ed.chunk.js","sourcesContent":["import { OPTIONS, DROP_COLORS } from './options'\nimport { getColorObject } from './utils'\n\nlet generateFile = null\n\n/**\n * Reads the values from local storage\n * Appends css attribute\n * @returns array: data that can be converted to css file.\n */\nconst getData = () => [\n  ':root{\\n',\n  '/* Generated using ShabadOS Theme Generator */\\n',\n  ...Object.values( OPTIONS )\n    .filter( ( { storageKey } ) => storageKey.includes( '--' ) )\n    .filter( ( { storageKey } ) => localStorage[storageKey] !== 'none' )\n    .filter( ( { storageKey } ) => localStorage[storageKey] !== 'inherit' )\n    .map( ( { storageKey } ) => {\n      // Drop colors require to be string https://github.com/ShabadOS/desktop/blob/fc01ec563178ad605e42c2274b030da366063a13/app/frontend/src/Overlay/themes/Example.template#L82\n      if ( DROP_COLORS.includes( storageKey ) ) {\n        const rgba = getColorObject( localStorage[storageKey] )\n        return `${storageKey}: ${rgba.r}, ${rgba.g}, ${rgba.b};\\n`\n      }\n      return `${storageKey}: ${localStorage[storageKey]};\\n`\n    } ),\n  '}',\n]\n\n/**\n * Converts the data[] into a blob for storage\n * @returns blob URL\n */\nconst makeCssFile = () => {\n  const dataFile = new Blob( getData(), { type: 'text/plain' } )\n  if ( generateFile !== null ) {\n    window.URL.revokeObjectURL( generateFile )\n  }\n  generateFile = window.URL.createObjectURL( dataFile )\n  return generateFile\n}\n\nexport default makeCssFile\n","import React, { useState } from 'react'\nimport {\n  Box,\n  Dialog,\n  TextField,\n  DialogTitle,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n} from '@material-ui/core'\n\nimport makeCssFile from '../../lib/generate'\nimport { timestamp } from '../../lib/utils'\n\nimport { Button } from '../SettingComponent'\n\nconst ExportEditor = () => {\n  const [ settings, setSettings ] = useState( false )\n  const [ themeName, setThemeName ] = useState( `Overlay ${timestamp()}` )\n\n  const saveFile = () => {\n    const link = document.createElement( 'a' )\n    link.href = makeCssFile()\n    link.setAttribute( 'download', `${themeName}.css` )\n    link.click()\n  }\n\n  const handleClickOpen = () => { setSettings( true ) }\n\n  const handleClose = () => { setSettings( false ) }\n\n  const resetEditor = () => {\n    window.localStorage.clear()\n    setSettings( false )\n    window.location.reload()\n  }\n\n  return (\n    <Box className=\"pane\" p={2}>\n\n      <div className=\"option\">\n\n        <TextField\n          className=\"text-input\"\n          label=\"Theme Name\"\n          defaultValue={themeName}\n          onFocus={( { target } ) => target.select()}\n          onChange={( { target: { value } } ) => {\n            // Empty string then set default (Overlay 2020-05-21 HH_MM_SS)\n            // Else User given string\n            if ( value.trim() === '' ) setThemeName( `Overlay ${timestamp()}` )\n            else setThemeName( value )\n          }}\n          fullWidth\n        />\n\n      </div>\n\n      <div className=\"option\">\n        <Button color=\"primary\" onClick={saveFile}>\n          Save\n        </Button>\n      </div>\n\n      <div className=\"option\">\n\n        <Button color=\"primary\" onClick={handleClickOpen}>\n          Reset to defaults\n        </Button>\n\n        <Dialog\n          open={settings}\n          onClose={handleClose}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n\n          <DialogTitle id=\"alert-dialog-title\">\n            Are you sure you want to reset the theme editor?\n          </DialogTitle>\n\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              You cannot undo this action.\n            </DialogContentText>\n          </DialogContent>\n\n          <DialogActions>\n\n            <Button onClick={resetEditor} color=\"primary\">\n              Reset\n            </Button>\n\n            <Button onClick={handleClose} color=\"primary\">\n              Cancel\n            </Button>\n\n          </DialogActions>\n\n        </Dialog>\n      </div>\n\n    </Box>\n  )\n}\n\nexport default ExportEditor\n"],"sourceRoot":""}